#!/bin/bash
# (c) 2020-23 T.Hass
#
# USAGE pigeos-img2geos
#
###
#
# NAME: Pi/GEOS Image to GEOS v0.2
#
# PURPOSE: Pi/GEOS document conversion service/utillity
#
# DESCRIPTION: This utility runs in the background and convrets files
#   placed in an input folder IMG2GEOS into a file that can be handled
#   by GEOS. File names are cut to meet the 8.3 DOS naming convention.
#   The service has been designed to be used in conjunction with the
#	file synchronization service. 
#
# images
# 	Image files are converted into GIF87a format. As GEOS can't handle
#   files large in size image width is reduced to ING2GEOS_MAX_WIDTH.
#   Also the color depth is reduced by mapping all colors into a 216
#   color plus 16 gray level palette. Direct mapping is used if the
#   input image contains less distinct colors than defined by the
#   IMG2GEOS_DITHER_TH value to retain a clean look (of eg. clip art)
#   and also to achive good compression ratio. For other images
#   (eg. photos) FloydSteinberg dithering is used.
# Microsoft Word doc/docx
# 	Some versions of GEOS can read files created with version of
#   MS Word for DOS und WinWord 8 or older this tool can be used to
#   convert docuents created with more recent versions into plain text
#   DOS file format.
# Microsoft Excel xlsx
# 	Recent Excel documents will be convert into CSV files.
# 	
# SEE ALSO: pigeos-config, pigeos-rslsync
#
#####
# depend. pkg.: inotify-tools, imagemagick, antiword, docx2txt, xlsx2csv
CONFIG=$HOME/.pigeos
LOGFILE=/tmp/pigeos-img2geos.log

# req. for locking
set -C

__unix2geosname() {
  local bname="${1%.*}" 
  # create an uppercase DOS file name for the source image
  local gname=$(echo ${bname:0:8} | tr [:lower:] [:upper:] | tr -d " ")
  # 
  if [ -f ${IMG2GEOS_OUTPATH}/${gname}.$2 ]; then
    gname=${gname:0:7}
    for idx in $(seq 0 9); do
      if [ ! -f ${IMG2GEOS_OUTPATH}/${gname}${idx}.$2 ]; then
        gname=${gname}${idx}
        break
      fi
    done
  fi
  echo ${gname}.$2
}

__img2geos() {
  local img="$1"
  local iccount=$(identify -format %k "${IMG2GEOS_INPATH}/$img")
  local igname=$(__unix2geosname "$img" GIF)
  # use dithering only for photos, unfortunately most cliparts are JEPG
  # compressed what results in color artifacts so the images contain >256 colors
  if [ $iccount -le $IMG2GEOS_DITHER_TH ]
  then
    convert -median 2 -fuzz 10% -alpha remove -alpha off \
			+dither -remap $IMG2GEOS_GPALETTE \
	        -resize $ING2GEOS_MAX_WIDTH\> -filter Point \
			"${IMG2GEOS_INPATH}/$img" "GIF87:${IMG2GEOS_OUTPATH}/$igname"
  else
    convert -dither FloydSteinberg -remap $IMG2GEOS_GPALETTE \
	        -resize $ING2GEOS_MAX_WIDTH\> -filter Cubic \
			"${IMG2GEOS_INPATH}/$img" "GIF87:${IMG2GEOS_OUTPATH}/$igname"
  fi
  [[ $? -eq 0 ]] && rm "${IMG2GEOS_INPATH}/$img"
}

__antiword() {
  local docfile="$1"
  local gdocname=$(__unix2geosname "$docfile" TXT)
  antiword "${IMG2GEOS_INPATH}/$docfile" \
  | iconv -s -t CP850 \
  | sed 's/$/\r/g' > ${IMG2GEOS_OUTPATH}/$gdocname
  [[ ${PIPESTATUS[0]} -eq 0 ]] && rm "${IMG2GEOS_INPATH}/$docfile"
}

__docx2txt() {
  local docfile="$1"
  local gdocname=$(__unix2geosname "$docfile" TXT)
  docx2txt ${IMG2GEOS_INPATH}/$docfile - \
  | iconv -s -t CP850 \
  | sed 's/$/\r/g' > ${IMG2GEOS_OUTPATH}/$gdocname
  [[ ${PIPESTATUS[0]} -eq 0 ]] && rm "${IMG2GEOS_INPATH}/$docfile"
}

__xlsx2csv() {
  local docfile="$1"
  local gdocname=$(__unix2geosname "$docfile" CSV)
  xlsx2csv ${IMG2GEOS_INPATH}/$docfile \
  | iconv -s -t CP850 \
  | sed 's/$/\r/g' > ${IMG2GEOS_OUTPATH}/$gdocname
  [[ ${PIPESTATUS[0]} -eq 0 ]] && rm "${IMG2GEOS_INPATH}/$docfile"
}

### Main ###
source ${CONFIG}
# create folder, if not present
test -d $IMG2GEOS_INPATH 	|| mkdir -p $IMG2GEOS_INPATH
test -d $IMG2GEOS_OUTPATH 	|| mkdir -p $IMG2GEOS_OUTPATH

# try to lock the input folder, after rslsync has hopefully synced
# lock files from other remote peers...
while sleep 10; do
  echo >$IMG2GEOS_INPATH/pigeos-img2geos.lock 2>/dev/null || continue
  trap "rm $IMG2GEOS_INPATH/pigeos-img2geos.lock" EXIT
  break
done

# first check for existing files than watch for newly copied or created files
(
  ls $IMG2GEOS_INPATH/
  inotifywait -qm -e MOVED_TO,CLOSE_WRITE --format '%f' $IMG2GEOS_INPATH
) | while read document
do
  case $(file -b --mime-type "$IMG2GEOS_INPATH/$document") in
    image/*)  __img2geos "$document";;
    application/msword)
  			  __antiword "$document";;
    application/vnd.openxmlformats-officedocument.wordprocessingml.document)
  			  __docx2txt "$document";;
    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet)
  			  __xlsx2csv "$document";;
    *)		  echo "unsupported document type: $document" >>$LOGFILE
  esac
done
