#!/bin/bash
#set -x
#set -e
# second stage installation
source /usr/local/etc/pigeos.conf
# finish pending setup stages
if [ $CONTINUE_SETUP -ne 0 ]; then
  pigeos-setup install_stage${CONTINUE_SETUP}
fi
# when exec this script from the profile no keyboard is available
# therefore DOSBox & pigeos-config are running in an endless loop
# until pigeos-config returns a non zero exit code (e.g. DEBUG=1)
while :; do
  source $HOME/.pigeos
  # check for min configuration
  if [ -x ${DOSBOX_BIN} -a -w ${HDC_IMAGE} ] ; then
      c_args="imgmount c ${HDC_IMAGE} -t hdd"
    # mount other drives when an image present 
    if [ -w ${FDA_IMAGE} ] ; then
      a_args="imgmount a ${HDD_IMAGE} -t floppy"
    else
      a_args="echo off"
    fi
    if [ -w ${FDB_IMAGE} ] ; then
      b_args="imgmount b ${HDD_IMAGE} -t floppy"
    else
      b_args="echo off"
    fi
	if [ -w ${HDD_IMAGE} ] ; then
      d_args="imgmount d ${HDD_IMAGE} -t hdd"
	elif [ ${MOUNT_DOC} -eq 1 -a -d "$HOME/Documents" ] ; then
      d_args="mount d $HOME/Documents"
	else
	  d_args="echo off"
	fi
	if [ ${RSLSYNC_SLOAD} -eq 1 -a -d "$HOME/Shared" ] ; then
      s_args="mount s $HOME/Shared"
	else
	  s_args="echo off"
	fi
    if [ ${MOUNT_USB} -eq 1 ] ; then
      u_args="mount u /media/usb"
	else
	  u_args="echo."
	fi
	$DOSBOX_BIN \
	  -c "$a_args" \
	  -c "$b_args" \
  	  -c "$c_args" \
	  -c "$d_args" \
	  -c "$s_args" \
	  -c "$u_args" \
	  -c "keyb ${KEYB:-us} 850" \
	  -c "call c:\autoexec.bat" \
	1>/tmp/loader.log 2>&1
  fi
  # run SETUP-config if something went wrong
  pigeos-config
  [ $? -ne 0 ] && break
done
  
